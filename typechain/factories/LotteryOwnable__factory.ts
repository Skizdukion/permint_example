/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LotteryOwnable,
  LotteryOwnableInterface,
} from "../LotteryOwnable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105b0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101d6565b604051610065919061044d565b60405180910390f35b610088600480360381019061008391906103cf565b6101ff565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010f90610488565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610488565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f490610468565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103c981610563565b92915050565b6000602082840312156103e157600080fd5b60006103ef848285016103ba565b91505092915050565b610401816104b9565b82525050565b60006104146026836104a8565b915061041f826104eb565b604082019050919050565b60006104376020836104a8565b91506104428261053a565b602082019050919050565b600060208201905061046260008301846103f8565b92915050565b6000602082019050818103600083015261048181610407565b9050919050565b600060208201905081810360008301526104a18161042a565b9050919050565b600082825260208201905092915050565b60006104c4826104cb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61056c816104b9565b811461057757600080fd5b5056fea26469706673582212206b05cc734ffbe7ff8e99cd39e00d82ede9f02085523ec6a44a2e77aa0f04c42f64736f6c63430008020033";

type LotteryOwnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryOwnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryOwnable__factory extends ContractFactory {
  constructor(...args: LotteryOwnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LotteryOwnable";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LotteryOwnable> {
    return super.deploy(overrides || {}) as Promise<LotteryOwnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LotteryOwnable {
    return super.attach(address) as LotteryOwnable;
  }
  connect(signer: Signer): LotteryOwnable__factory {
    return super.connect(signer) as LotteryOwnable__factory;
  }
  static readonly contractName: "LotteryOwnable";
  public readonly contractName: "LotteryOwnable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryOwnableInterface {
    return new utils.Interface(_abi) as LotteryOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryOwnable {
    return new Contract(address, _abi, signerOrProvider) as LotteryOwnable;
  }
}
